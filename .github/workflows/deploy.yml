# Sample workflow for building and deploying a Next.js site to GitHub Pages
name: 部署个人博客到GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]  # 当main分支有代码推送时触发

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:    # 允许手动触发

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          # 移除缓存配置以解决422错误
          # cache: 'npm'

      - name: 安装依赖
        run: npm ci --legacy-peer-deps

      - name: 构建项目
        run: |
          # 临时移除所有API路由以便静态导出
          rm -rf app/api
          npm run build
        env:
          # 设置GitHub Token用于留言板功能
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_REPO_OWNER: ${{ github.repository_owner }}
          ISSUE_REPO_NAME: ${{ github.repository }}
          ISSUE_NUMBER: 1  # 确保已创建此Issue编号

      - name: 配置自定义域名 (如果有)
        run: |
          if [ "${{ secrets.CUSTOM_DOMAIN }}" != "" ]; then
            echo "${{ secrets.CUSTOM_DOMAIN }}" > out/CNAME
          fi
      
      - name: 部署到GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: out  # 要部署的目录
          branch: gh-pages  # 部署到的分支
